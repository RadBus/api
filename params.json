{"name":"RadBus Web API","tagline":"REST API Documentaion","body":"The RabBus Web API enables applications to obtain upcoming Twin Cities Metro Transit departure information for users with configured route schedules.  The most practical use case is when an end user has multiple transit route/stop options and needs to make a quick decision right now on which one makes the most sense.\r\n\r\nRadBus is an open source project built by people participating in the Twin Cities open source community who rely on Metro Transit to get to and from work every day.  To see the source code behind this API and learn about contributing to the project, click the GitHub icon at the top of this page.  To see a working RadBus client, check out the [RadBus Web Client](https://www.radbus.io).\r\n\r\n## Authentication\r\n\r\nMany RadBus API endpoints require requests to be authenticated.  Rather than store user credentials internally, RadBus uses [OAuth2 Authorization](http://tools.ietf.org/html/rfc6750) to identify the user and then uses an identifier (ex: hash of email address) as a foreign key to their RadBus data.\r\n\r\nTo use a request that requires authentication you must pass an [Authorization](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.8) HTTP header with a `Bearer` token obtained by a supported OAuth2 provider.  Currently the RadBus API only supports OAuth2 tokens generated from Google ID's, which you can learn more about [here](https://developers.google.com/accounts/docs/OAuth2).\r\n\r\n## Version 1 Resources\r\n\r\n### Root\r\n\r\nProvides description and version information about the v1 API.\r\n\r\n#### Fetch (GET /v1)\r\n\r\n##### Request\r\n\r\n```\r\nGET https://api.radbus.io/v1\r\n```\r\n\r\n##### Response\r\n\r\n`200 OK`\r\n```json\r\n{\r\n  \"service_name\": \"RadBus Web API\",\r\n  \"app_version\": \"0.1.0\",\r\n  \"api_version\": \"1.0.0\"\r\n}\r\n```\r\n\r\n### Route List\r\n\r\nA list of all available transit routes.\r\n\r\n#### Fetch (GET /v1/routes)\r\n\r\n##### Request\r\n\r\n```\r\nGET https://api.radbus.io/v1/routes\r\n```\r\n\r\n##### Response\r\n\r\n`200 OK`\r\n```json\r\n[\r\n  {\r\n    \"id\": \"4\",\r\n    \"description\": \"4 - New Brighton - Johnson St - Bryant Av - Southtown\"\r\n  },\r\n  ...\r\n]\r\n```\r\n\r\n### Route Details\r\n\r\nTransit route details, including directions and stops.\r\n\r\n#### Fetch (GET /v1/routes/:route)\r\n\r\n##### Request\r\n\r\n```\r\nGET https://api.radbus.io/v1/routes/4\r\n```\r\n\r\n##### Response\r\n\r\n`200 OK`\r\n```json\r\n{\r\n  \"id\": \"4\",\r\n  \"description\": \"4 - New Brighton - Johnson St - Bryant Av - Southtown\",\r\n  \"directions\": [\r\n    {\r\n      \"id\": \"4\",\r\n      \"description\": \"Northbound\", \r\n      \"stops\": [\r\n        {\r\n          \"id\": \"82ST\", \r\n          \"description\": \"82nd St and I-35W\"\r\n        }, \r\n        ...\r\n      ]\r\n    },\r\n    {\r\n      \"id\": \"1\",\r\n      \"description\": \"Southbound\", \r\n      \"stops\": [\r\n        {\r\n          \"id\": \"O81A\", \r\n          \"description\": \"1st Ave NW and Old Hwy 8\"\r\n        }, \r\n        ...\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n### Schedule \r\n\r\nA user's configured schedule in the RadBus system.\r\n\r\n#### Fetch (GET /v1/schedule)\r\n\r\n##### Request\r\n\r\nRequires [Authentication](#authentication)\r\n\r\n```\r\nGET https://api.radbus.io/v1/schedule\r\nAuthorization: Bearer <oauth2-token>\r\n```\r\n\r\n##### Success Response\r\n\r\nIf no schedule exists for the authenticated user, then a response is returned with no routes:\r\n\r\n`200 OK`\r\n```json\r\n{\r\n  \"user_display_name\": \"Joe User\",\r\n  \"routes:\": []\r\n}\r\n```\r\n\r\nOtherwise, a response is returned that contains routes:\r\n\r\n`200 OK`\r\n```json\r\n{\r\n  \"user_display_name\": \"Joe User\",\r\n  \"routes\": [\r\n    {\r\n      \"id\": \"4\",\r\n      \"description\": \"4 - New Brighton - Johnson St - Bryant Av - Southtown\"\r\n      \"am\": {\r\n        \"direction\": {\r\n          \"id\": 1,\r\n          \"description\": \"Southbound\"\r\n        },\r\n        \"stops\": [\r\n          {\r\n            \"id\": \"O81A\",\r\n            \"description\": \"1st Ave NW and Old Hwy 8\"\r\n          },\r\n          {\r\n            \"id\": \"SLVI\",\r\n            \"description\": \"Silver Lake Village\"\r\n          }\r\n        ]\r\n      },\r\n      \"pm\": {\r\n        \"direction\": {\r\n          \"id\": 4,\r\n          \"name\": \"Northbound\"\r\n        },\r\n        \"stops\": [\r\n          {\r\n            \"id\": \"7SNI\",\r\n            \"description\": \"Nicollet Mall and 7th St S\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n##### Failure Responses\r\n\r\n`401 Unauthorized`: no `Authorization` request header was passed or the provided OAuth2 token is invalid\r\n\r\n#### Add Route (POST /v1/schedule)\r\n\r\nAdds a single route to the authenticated user's schedule.\r\n\r\n##### Request\r\n\r\nRequires [Authentication](#authentication)\r\n\r\n```\r\nPOST https://api.radbus.io/v1/schedule\r\nAuthorization: Bearer <oauth2-token>\r\nContent-Type: application/json\r\n```\r\n\r\nThe request body needs to contain a route ID and both AM and PM direction/stops:\r\n\r\n```json\r\n{\r\n  \"id\": \"4\",\r\n  \"am\": {\r\n    \"direction\": 1,\r\n    \"stops\": [\"O81A\", \"SLVI\"]\r\n  },\r\n  \"pm\": {\r\n    \"direction\": 4,\r\n    \"stops\": [\"7SNI\"]\r\n  }\r\n}\r\n```\r\n\r\n##### Success Response\r\n\r\n`201 Created`\r\n\r\nCall [Fetch](#fetch-get-v1schedule) to see the updated schedule.\r\n\r\n##### Failure Responses\r\n\r\n`401 Unauthorized`: No `Authorization` request header was passed or the provided OAuth2 token is invalid.\r\n\r\n`400 Bad Request`: The request body was invalid.  The response will contain specific validation error messages:\r\n\r\n```json\r\n{\r\n  \"code\": \"InvalidContentError\",\r\n  \"message\": \"The route ID 'foo' does not exist.\"\r\n}\r\n```\r\n\r\n#### Remove Route (DELETE /v1/schedule/:route)\r\n\r\nRemoves an existing route from the authenticated user's schedule.\r\n\r\n##### Request\r\n\r\nRequires [Authentication](#authentication)\r\n\r\n```\r\nDELETE https://api.radbus.io/v1/schedule/4\r\nAuthorization: Bearer <oauth2-token>\r\n```\r\n\r\n##### Success Response\r\n\r\n`204 No Content`\r\n\r\nCall [Fetch](#fetch-get-v1schedule) to see the updated schedule.\r\n\r\n##### Failure Responses\r\n\r\n`401 Unauthorized`: No `Authorization` request header was passed or the provided OAuth2 token is invalid.\r\n`400 Bad Request`: The specified route did not exist within the schedule.\r\n\r\n### Departures\r\n\r\nA list of upcoming transit departures based on the user's configured schedule.\r\n\r\n#### Fetch (GET /v1/departures)\r\n\r\n##### Request\r\n\r\nRequires [Authentication](#authentication)\r\n\r\n```\r\nGET https://api.radbus.io/v1/departures\r\nAuthorization: Bearer <oauth2-token>\r\n```\r\n\r\n##### Query Parameters\r\n\r\n* `route` - only return departures for the specified route\r\n\r\n##### Success Response\r\n\r\n`200 OK`\r\n```json\r\n[\r\n  {\r\n    \"time\": \"2014-05-14T14:27:00.863Z\",\r\n    \"route\": {\r\n      \"id\": \"270\",\r\n      \"terminal\": \"C\"\r\n    }, \r\n    \"stop\": {\r\n      \"id\": \"MPWD\",\r\n      \"description\": \"Maplewood Mall Transit Center\"\r\n    }\r\n  },\r\n  ...\r\n]\r\n```\r\n\r\n##### Failure Responses\r\n\r\n`401 Unauthorized`: No `Authorization` request header was passed or the provided OAuth2 token is invalid.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}